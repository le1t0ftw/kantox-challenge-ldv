name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  validate-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.2'
      - name: Install dependencies
        run: pip install flake8 pytest
      - name: Lint with flake8
        run: flake8 services-code

  lint-docker:
    runs-on: ubuntu-latest
    needs: validate-code
    strategy:
      matrix:
        service: [api, aux]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Lint Dockerfile
        run: docker run --rm -i hadolint/hadolint < ./services-code/${{ matrix.service }}/Dockerfile

  update-k8s-secret-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Replace AWS Keys in Secret YAML
        run: |
          sed -i "s|AWS_ACCESS_KEY_ID:.*|AWS_ACCESS_KEY_ID: $(echo -n '${{ secrets.AWS_ACCESS_KEY_ID }}' | base64)|g" kubernetes/services/auxiliary-service/aws-secrets.yaml
          sed -i "s|AWS_SECRET_ACCESS_KEY:.*|AWS_SECRET_ACCESS_KEY: $(echo -n '${{ secrets.AWS_SECRET_ACCESS_KEY }}' | base64)|g" kubernetes/services/auxiliary-service/aws-secrets.yaml
      - name: Commit and Push Changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add kubernetes/services/auxiliary-service/aws-secrets.yaml
          git commit -m "Updated AWS credentials in Kubernetes Secret" || exit 0
          git pull origin main --rebase
          git push https://x-access-token:${PAT_TOKEN}@github.com/le1t0ftw/kantox-challenge-ldv.git -q

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [validate-code, lint-docker, update-k8s-secret-file]
    strategy:
      matrix:
        service: [main-api, auxiliary-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check for changes
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            service:
              - 'services-code/${{ matrix.service }}/**'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Log in to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
      - name: Ensure ECR repository exists
        id: ensure-repo
        run: |
          aws ecr describe-repositories --repository-names ${{ matrix.service }} --region us-east-1 || \
          (aws ecr create-repository --repository-name ${{ matrix.service }} --region us-east-1 && echo "REPO_CREATED=true" >> $GITHUB_ENV)
        continue-on-error: true
      - name: Build and push image
        if: steps.changes.outputs.service == 'true' || env.REPO_CREATED == 'true'
        env:
          SHORT_SHA: ${{ github.sha }}
        run: |
          SHORT_SHA=${SHORT_SHA::7}
          docker build -t ${{ matrix.service }}:$SHORT_SHA ./services-code/${{ matrix.service }}
          docker tag ${{ matrix.service }}:$SHORT_SHA ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ matrix.service }}:$SHORT_SHA
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ matrix.service }}:$SHORT_SHA
      - name: Update deployment file
        if: steps.changes.outputs.service == 'true' || env.REPO_CREATED == 'true'
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          sed -i "s|image:.*|image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ matrix.service }}:$SHORT_SHA|g" ./kubernetes/services/${{ matrix.service }}/${{ matrix.service }}-deployment.yaml
      - name: Commit and push changes
        if: steps.changes.outputs.service == 'true' || env.REPO_CREATED == 'true'
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add kubernetes/services/${{ matrix.service }}/${{ matrix.service }}-deployment.yaml
          git commit -m "Updated ${{ matrix.service }} deployment image to $SHORT_SHA" || exit 0
          git pull origin main --rebase
          git push https://x-access-token:${PAT_TOKEN}@github.com/le1t0ftw/kantox-challenge-ldv.git -q
